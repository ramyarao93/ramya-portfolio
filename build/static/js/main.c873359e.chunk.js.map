{"version":3,"sources":["images/Portfolio-About.jpeg","About.js","Skills.js","Experience.js","Education.js","ContactForm.js","Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Title","Typography","Text","TitleStyles","color","fontFamily","fontWeight","TextStyles","About","align","justify","style","background","id","span","padding","src","AboutImage","cardStyles","textAlign","ProgressCard","skillPercentage","skillName","type","percent","status","trailColor","strokeWidth","strokeLinecap","strokeColor","SkillCard","icon","skillCategory","skillDescription","skillList","level","map","skill","Skills","CodeOutlined","fontSize","ToolOutlined","BookOutlined","marginBottom","seniorDeveloperAtChainyardList","developerAtChainyardList","developerAtTinystepList","internList","ExperienceList","experienceList","itemLayout","dataSource","renderItem","item","Item","ExperienceCard","role","location","responsibility","Experience","Education","offset","mode","label","TextArea","Input","formItemLayout","labelCol","xs","sm","wrapperCol","ContactForm","Form","useForm","form","name","onFinish","values","emailjs","send","then","response","console","log","text","err","initialValues","residence","prefix","scrollToFirstError","rules","required","message","whitespace","placeholder","rows","htmlType","iconStyle","SocialMediaIcon","link","href","target","Contact","push","LinkedinOutlined","FacebookOutlined","InstagramOutlined","Content","Layout","Sider","Link","Anchor","TitleStyleForNavigation","App","theme","title","margin","overflow","className","boxShadow","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.c873359e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Portfolio-About.41370c7a.jpeg\";","import React from \"react\";\nimport { Row, Col, Image, Typography } from \"antd\";\nimport AboutImage from \"./images/Portfolio-About.jpeg\";\n\nconst { Title, Text } = Typography;\n\nconst TitleStyles = {\n  color: \"white\",\n  fontFamily: `\"Lato\", Arial, Tahoma, sans-serif`,\n  fontWeight: 100\n};\n\nconst TextStyles = {\n  color: \"white\",\n  fontFamily: `\"Lato\", Arial, Tahoma, sans-serif`,\n  fontWeight: 100\n};\n\nconst About = () => {\n  return (\n    <Row\n      align=\"middle\"\n      justify=\"center\"\n      style={{ background: \"#373737\" }}\n      id=\"about\"\n    >\n      <Col span={12} style={{ padding: \"0 15px\" }}>\n        <Title style={TitleStyles}>Ramya Rao</Title>\n        <Text style={TextStyles}>\n          Experienced Front End Developer with a demonstrated history of working\n          in the information technology and services industry. Skilled in\n          Agile Practices, Web Development and Product Management. Strong\n          engineering professional with a Masters focused in Engineering\n          Management which has taught me to apply technical concepts to the\n          business overview.\n        </Text>\n      </Col>\n      <Col span={12}>\n        <Image src={AboutImage} />\n      </Col>\n    </Row>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport { Row, Col, Typography, Progress } from \"antd\";\nimport { CodeOutlined, BookOutlined, ToolOutlined } from \"@ant-design/icons\";\nconst { Title, Text } = Typography;\n\nconst cardStyles = {\n  padding: \"0 20px\",\n  textAlign: \"center\"\n};\n\nconst TitleStyles = {\n  color: \"black\",\n  fontFamily: `\"Lato\", Arial, Tahoma, sans-serif`,\n  fontWeight: 100,\n  padding: \"15px 0px\"\n};\n\nconst TextStyles = {\n  color: \"black\",\n  fontFamily: `\"Lato\", Arial, Tahoma, sans-serif`,\n  fontWeight: 100\n};\n\nconst ProgressCard = ({ skillPercentage, skillName }) => {\n  return (\n    <Row style={{ textAlign: \"left\", padding: \"15px 0px\" }}>\n      <Col span={24}>\n        <Text type=\"secondary\" style={TextStyles}>\n          {skillName}\n        </Text>\n        <Progress\n          percent={skillPercentage}\n          status=\"active\"\n          trailColor=\"#A9A9A9\"\n          strokeWidth={15}\n          strokeLinecap=\"square\"\n          strokeColor=\"black\"\n        />\n      </Col>\n    </Row>\n  );\n};\n\nconst SkillCard = ({ icon, skillCategory, skillDescription, skillList }) => {\n  return (\n    <Col span={8} style={cardStyles}>\n      {icon}\n      <Title level={4} style={TitleStyles}>\n        {skillCategory}\n      </Title>\n      <Text style={TextStyles}>{skillDescription}</Text>\n      {skillList.map(skill => {\n        return (\n          <ProgressCard\n            skillPercentage={skill.skillPercentage}\n            skillName={skill.skillName}\n          />\n        );\n      })}\n    </Col>\n  );\n};\n\nconst Skills = () => {\n  const frontEndSkillList = [\n    {\n      skillName: \"React\",\n      skillPercentage: \"90\"\n    },\n    {\n      skillName: \"Javascript\",\n      skillPercentage: \"90\"\n    },\n    {\n      skillName: \"Node JS\",\n      skillPercentage: \"80\"\n    },\n    {\n      skillName: \"Antd\",\n      skillPercentage: \"90\"\n    },\n    {\n      skillName: \"Carbon\",\n      skillPercentage: \"70\"\n    },\n    {\n      skillName: \"HTML/CSS\",\n      skillPercentage: \"95\"\n    }\n  ];\n\n  const devToolsSkillList = [\n    {\n      skillName: \"GIT\",\n      skillPercentage: \"85\"\n    },\n    {\n      skillName: \"JIRA\",\n      skillPercentage: \"90\"\n    },\n    {\n      skillName: \"Invision\",\n      skillPercentage: \"75\"\n    },\n    {\n      skillName: \"Zeplin\",\n      skillPercentage: \"85\"\n    },\n    {\n      skillName: \"MongoDB\",\n      skillPercentage: \"80\"\n    },\n    {\n      skillName: \"SQL\",\n      skillPercentage: \"83\"\n    }\n  ];\n\n  const mentorshipSkillList = [\n    {\n      skillName: \"Team Player\",\n      skillPercentage: \"100\"\n    },\n    {\n      skillName: \"Leadership\",\n      skillPercentage: \"90\"\n    },\n    {\n      skillName: \"Intern Trainer\",\n      skillPercentage: \"93\"\n    },\n    {\n      skillName: \"Peer Coaching\",\n      skillPercentage: \"95\"\n    }\n  ];\n\n  return (\n    <div style={{ padding: \"25px 0px\", background: \"#dbc596\" }} id=\"skills\">\n      <Row justify=\"center\">\n        <Col span={4}>\n          <Title style={TitleStyles}>My skills</Title>\n        </Col>\n      </Row>\n      <Row>\n        <SkillCard\n          skillCategory=\"Front-end Developer\"\n          skillDescription=\"I like to code things from scratch, and enjoy bringing ideas to\n          life in the browser.\"\n          skillList={frontEndSkillList}\n          icon={\n            <CodeOutlined style={{ fontSize: \"4em\", padding: \"25px 0px\" }} />\n          }\n        />\n        <SkillCard\n          skillCategory=\"Development Tools\"\n          skillDescription=\"I value efficient product management tools and thoughtful interactions.\"\n          skillList={devToolsSkillList}\n          icon={\n            <ToolOutlined style={{ fontSize: \"4em\", padding: \"25px 0px\" }} />\n          }\n        />\n        <SkillCard\n          skillCategory=\"Mentorship and Leader\"\n          skillDescription=\"I care about people, and love helping fellow colleagues and learn from them as well.\"\n          skillList={mentorshipSkillList}\n          icon={\n            <BookOutlined style={{ fontSize: \"4em\", padding: \"25px 0px\" }} />\n          }\n        />\n      </Row>\n    </div>\n  );\n};\n\nexport default Skills;\n","import React from \"react\";\nimport { Row, Col, Typography, List, Divider } from \"antd\";\nconst { Title, Text } = Typography;\n\nconst TitleStyles = {\n    color: \"black\",\n    fontFamily: `\"Lato\", Arial, Tahoma, sans-serif`,\n    fontWeight: 100,\n    padding: \"15px 0px\",\n    marginBottom: \"0px\"\n};\n\nconst seniorDeveloperAtChainyardList = [\n    \"Designed and developed a web interface in a supplier-buyer relationship model, multiple plugins and micro services supported on a blockchain network\",\n    \"Built a micro service front end component in React to make the sprint cycle more efficient\",\n    \"Built UI and backend components for dynamic form generations using JSON file loaders\",\n    \"Built a React project - “ProjectKicker” which enabled any new team in the company to use in order to set up a base template of the UI project structure\",\n    \"Responsible for project planning and enhancements in every sprint and participated in agile sprint planning with the product and QA team.\"\n];\n\nconst developerAtChainyardList = [\n    \"Lead frontend developer of a blockchain application across the supply chain space for maintaining relief efforts during natural disasters, winning the International Stevies Award for Community Impact\",\n    \"Developed a web interface that used the concept of cryptocurrency across the blockchain platform which allow financial institutions to use a distributed ledger for settlement.\",\n    \"Created and integrated scalable UI services which provided fast and secure communication between the front end and the backend RESTful APIs\"\n];\n\nconst developerAtTinystepList = [\n    \"Developed front end as well as backend server code for a parenting website using React, Bootstrap and Node JS libraries.\",\n    \"Analyzed and tracked weekly data of users, using Google Analytics and Excel, and developed upcoming features by making data - driven decisions\",\n    \"Worked on code, images, files and data of a huge user base on MongoDB and SQL\",\n    \"Collaborated with product designers to create clean interfaces, simple intuitive interactions and experiences increasing the web monthly traffic from 24K to 2.8 Million\"\n];\n\nconst analystAtDeloitteList = [\n    \"Coded and tested functionalities for a health insurance exchange project, thereby working on the development of client requirements\",\n    \"Owned and facilitated regression, database and user acceptance testing for 100k+ users\",\n    \"Developed and executed test scripts using several tools and ensured error and fatalities free code\"\n];\n\nconst internList = [\n    \"Programmed the website analytics and front-end development for uploading electronic medical records, on a patient - doctor interface platform, ensuring performance improvement of project modules.\",\n    \"Implemented responsible web design principles to build an interface, compatible with multiple devices\",\n    \"Analyzed web traffic to determine, recommend, and plan the modification of the existing modules for user - friendly and optimized results\"\n];\n\nconst ExperienceList = ({ experienceList }) => {\n    return (\n        <List\n            itemLayout=\"horizontal\"\n            dataSource={experienceList}\n            renderItem={item => (\n                <List.Item>\n                    <Text type=\"secondary\">{item}</Text>\n                </List.Item>\n            )}\n            style={{ textAlign: \"left\" }}\n        />\n    );\n};\n\nconst ExperienceCard = ({ role, location, responsibility, experienceList }) => {\n    return (\n        <>\n            <Row justify=\"space-around\" align=\"middle\">\n                <Col span={6}>\n                    <Title level={5}>{role}</Title>\n                    <Text>{location}</Text>\n                </Col>\n                <Col span={18} style={{ textAlign: \"left\" }}>\n                    <Text>{responsibility}</Text>\n                    <ExperienceList experienceList={experienceList} />\n                </Col>\n            </Row>\n            <Divider />\n        </>\n    );\n};\n\nconst Experience = () => {\n    return (\n        <div id=\"experience\">\n            <Row>\n                <Col span={24}>\n                    <Title style={TitleStyles}>Experience</Title>\n                </Col>\n            </Row>\n            <Row style={{ background: \"white\" }}>\n                <Col span={24}>\n                    <ExperienceCard\n                        role=\"Senior Frontend Developer\"\n                        location=\"Chainyard, North Carolina, USA\"\n                        responsibility=\"Worked closely with blockchain concepts and technology. Responsible for building applications using these concepts to make sure we deliver modern, frictionless experiences using the latest front end tools.\"\n                        experienceList={seniorDeveloperAtChainyardList}\n                    />\n                    <ExperienceCard\n                        role=\"Frontend Developer\"\n                        location=\"Chainyard, North Carolina, USA\"\n                        responsibility=\"\"\n                        experienceList={developerAtChainyardList}\n                    />\n                    <ExperienceCard\n                        role=\"Software Engineer Intern\"\n                        location=\"eimageGlobal Inc, North Carolina, USA\"\n                        responsibility=\"Interned in the software development team of a healthcare tech company, which included server application designing and UI development of the application using robust technologies\"\n                        experienceList={internList}\n                    />\n                    <ExperienceCard\n                        role=\"Frontend Developer\"\n                        location=\"Tinystep, Bangalore, India\"\n                        responsibility=\"Vestibulum dapibus, mauris nec malesuada fames ac turpis velit, rhoncus eu, luctus et interdum adipiscing wisi. Aliquam erat ac ipsum. Integer aliquam purus. Quisque lorem tortor fringilla sed, vestibulum id, eleifend justo vel bibendum sapien massa ac turpis.\"\n                        experienceList={developerAtTinystepList}\n                    />\n                    <ExperienceCard\n                        role=\"Business Technology Analyst\"\n                        location=\"Deloitte, Bangalore, India\"\n                        responsibility=\"Vestibulum dapibus, mauris nec malesuada fames ac turpis velit, rhoncus eu, luctus et interdum adipiscing wisi. Aliquam erat ac ipsum. Integer aliquam purus. Quisque lorem tortor fringilla sed, vestibulum id, eleifend justo vel bibendum sapien massa ac turpis.\"\n                        experienceList={internList}\n                    />\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default Experience;\n","import React from \"react\";\nimport { Timeline, Row, Col, Typography, Tag } from \"antd\";\n\nconst { Title, Text } = Typography;\n\nconst TitleStyles = {\n  color: \"black\",\n  fontFamily: `\"Lato\", Arial, Tahoma, sans-serif`,\n  fontWeight: 100,\n  padding: \"30px 0px\"\n};\n\nconst Education = () => {\n  return (\n    <Row align=\"middle\" style={{ background: \"#DCDCDC\" }} id=\"education\">\n      <Col span={24} style={{ textAlign: \"center\" }}>\n        <Title style={TitleStyles}>Education</Title>\n      </Col>\n      <Col span={20} offset={2}>\n        <Timeline mode=\"alternate\">\n          <Timeline.Item label={<Tag>December, 2018</Tag>}>\n            <Title level={3}>Masters in Engineering Management</Title>\n            <Title level={5}>Duke University</Title>\n            <Text>\n              The desire to gain experience on business strategies of technology driven projects,\n              churned an interest inside me to pursue this degree. I developed\n              the thirst to learn how to apply technology to managerial\n              programs. Earning this degree built my technical knowledge depth,\n              increased my business acumen and also expanded my network.\n            </Text>\n          </Timeline.Item>\n          <Timeline.Item label={<Tag>May, 2015</Tag>}>\n            <Title level={3}>Bachelors in Computer Science</Title>\n            <Title level={5}>Manipal University</Title>\n            <Text>\n              Having got a taste of computer technology, programming and learning about product development basics in high school, I decided this would my path.\n              With this trait, I decided to pursue Computer Science and\n              Engineering and learnt concepts like product lifecycle,\n              development, maintenance and code.\n            </Text>\n          </Timeline.Item>\n          <Timeline.Item label={<Tag>December, 2011</Tag>}>\n            <Title level={3}>Higher Secondary, Sciences</Title>\n            <Title level={5}>Deeksha Center For Learning</Title>\n            <Text>\n              Since childhood, having a predilection towards solving problems,\n              Mathematics and Computer Science became my favourite subjects in\n              school. Wanting to pursue this, I took up Sciences in Higher Secondary with an passiom to set my foot into the future of technology\n            </Text>\n          </Timeline.Item>\n        </Timeline>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Education;\n","import React from 'react';\nimport emailjs from \"emailjs-com\";\n\nimport {\n    Form,\n    Input,\n    Button\n} from 'antd';\nconst { TextArea } = Input;\nconst formItemLayout = {\n    labelCol: {\n        xs: {\n            span: 24,\n        },\n        sm: {\n            span: 8,\n        },\n    },\n    wrapperCol: {\n        xs: {\n            span: 24,\n        },\n        sm: {\n            span: 16,\n        },\n    },\n};\nconst tailFormItemLayout = {\n    wrapperCol: {\n        xs: {\n            span: 24,\n            offset: 0,\n        },\n        sm: {\n            span: 16,\n            offset: 8,\n        },\n    },\n};\n\nconst ContactForm = () => {\n    const [form] = Form.useForm();\n\n    const onFinish = values => {\n      emailjs\n        .send(\n          \"service_vkg5ws8\",\n          \"template_ttdki9h\",\n          values,\n          \"user_vhRLddNP3oYUF3GjcWenm\"\n        )\n        .then(\n          response => {\n            console.log(\"SUCCESS!\", response.status, response.text);\n          },\n          err => {\n            console.log(\"FAILED...\", err);\n          }\n        );\n    };\n\n    return (\n      <Form\n        {...formItemLayout}\n        form={form}\n        name=\"register\"\n        onFinish={onFinish}\n        initialValues={{\n          residence: [\"zhejiang\", \"hangzhou\", \"xihu\"],\n          prefix: \"86\"\n        }}\n        scrollToFirstError\n      >\n        <Form.Item\n          name=\"name\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your name\",\n              whitespace: true\n            }\n          ]}\n        >\n          <Input placeholder=\"Name\" />\n        </Form.Item>\n\n        <Form.Item\n          name=\"email\"\n          rules={[\n            {\n              type: \"email\",\n              message: \"The input is not valid E-mail!\"\n            },\n            {\n              required: true,\n              message: \"Please input your E-mail!\"\n            }\n          ]}\n        >\n          <Input placeholder=\"E-mail\" />\n        </Form.Item>\n\n        <Form.Item\n          name=\"subject\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your subject\",\n              whitespace: true\n            }\n          ]}\n        >\n          <Input placeholder=\"Subject\" />\n        </Form.Item>\n\n        <Form.Item\n          name=\"message\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your message\",\n              whitespace: true\n            }\n          ]}\n        >\n          <TextArea rows={6} placeholder=\"Message\" />\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Send a message\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n};\n\nexport default ContactForm;","import React from \"react\";\nimport { Row, Col, Typography } from \"antd\";\nimport {\n  FacebookOutlined,\n  LinkedinOutlined,\n  InstagramOutlined\n} from \"@ant-design/icons\";\nimport ContactForm from \"./ContactForm\";\nconst { Title } = Typography;\n\nconst iconStyle = {\n  fontSize: \"2em\",\n  color: \"black\"\n};\n\nconst TitleStyles = {\n  fontFamily: `\"Lato\", Arial, Tahoma, sans-serif`,\n  fontWeight: 100\n};\n\nconst SocialMediaIcon = ({ icon, link }) => {\n  return (\n    <Col span={3} offset={1}>\n      <a href={link} target=\"_blank\">\n        {icon}\n      </a>\n    </Col>\n  );\n};\n\nconst Contact = () => {\n  return (\n    <Row\n      style={{ background: \"#c7d6d2\", padding: \"20px\" }}\n      justify=\"center\"\n      id=\"contact\"\n    >\n      <Col span={8} push={2}>\n        <Row>\n          <Col span={24}>\n            <Title level={3} style={TitleStyles}>\n              Let's talk! Look me up on\n            </Title>\n          </Col>\n          <SocialMediaIcon\n            icon={<LinkedinOutlined style={iconStyle} />}\n            link=\"https://www.linkedin.com/in/ramya-0412\"\n          />\n          <SocialMediaIcon\n            icon={<FacebookOutlined style={iconStyle} />}\n            link=\"https://www.facebook.com/ramya.rao.90\"\n          />\n          <SocialMediaIcon\n            icon={<InstagramOutlined style={iconStyle} />}\n            link=\"https://www.instagram.com/ramyaarao_\"\n          />\n        </Row>\n      </Col>\n      <Col span={16} push={4}>\n        <ContactForm />\n      </Col>\n    </Row>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\nimport About from \"./About\";\nimport Skills from \"./Skills\";\nimport Experience from \"./Experience\";\nimport Education from \"./Education\";\nimport Contact from \"./Contact\";\nimport \"./App.css\";\nimport { Layout, Row, Col, Anchor, Typography } from \"antd\";\n\nconst { Content, Sider } = Layout;\nconst { Title } = Typography;\nconst { Link } = Anchor;\n\nconst TextLevelForNavigation = 5;\nconst TitleStyleForNavigation = {\n  fontWeight: 100\n};\n\nconst App = () => {\n  return (\n    <Layout>\n      <Sider style={{ padding: \"20% 20px\" }} theme=\"light\">\n        <Anchor>\n          <Link\n            href=\"#about\"\n            title={\n              <Title\n                level={TextLevelForNavigation}\n                style={TitleStyleForNavigation}\n              >\n                About\n              </Title>\n            }\n          />\n          <Link\n            href=\"#skills\"\n            title={\n              <Title\n                level={TextLevelForNavigation}\n                style={TitleStyleForNavigation}\n              >\n                Skills\n              </Title>\n            }\n          />\n          <Link\n            href=\"#experience\"\n            title={\n              <Title\n                level={TextLevelForNavigation}\n                style={TitleStyleForNavigation}\n              >\n                Experience\n              </Title>\n            }\n          />\n          <Link\n            href=\"#education\"\n            title={\n              <Title\n                level={TextLevelForNavigation}\n                style={TitleStyleForNavigation}\n              >\n                Education\n              </Title>\n            }\n          />\n          <Link\n            href=\"#contact\"\n            title={\n              <Title\n                level={TextLevelForNavigation}\n                style={TitleStyleForNavigation}\n              >\n                Contact\n              </Title>\n            }\n          />\n        </Anchor>\n      </Sider>\n      <Layout>\n        <Content style={{ margin: \"24px 16px 0\", overflow: \"initial\" }}>\n          <div\n            className=\"site-layout-background\"\n            style={{ padding: 24, textAlign: \"center\" }}\n          >\n            <Row>\n              <Col\n                span={20}\n                offset={2}\n                style={{\n                  boxShadow:\n                    \"0 0px 0px 0px white, 0 -0px 0px 0px white, 12px 0 15px -4px rgba(128,128,128, 0.8), -12px 0 15px -4px rgba(128,128,128, 0.8)\"\n                }}\n              >\n                <About />\n                <Skills />\n                <Experience />\n                <Education />\n                <Contact />\n              </Col>\n            </Row>\n          </div>\n        </Content>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}